// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}
body {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  overflow: hidden;
  @media only screen and (min-height: 1900px) {
    align-items: center;
  }
}
.container {
  max-width: 575px;
  display: flex;
  position: relative;
  flex-direction: column;
  align-items: center;
  padding: 40px 0 80px 0;
  @media only screen and (min-width: 750px) {
    padding: 62px 40px 85px 40px;
    max-width: 905px;
  }
  @media only screen and (min-width: 1000px) {
    padding: 62px 33px 91px 33px;
    max-width: 1200px;
  }
  @media only screen and (min-width: 1441px) {
    overflow: visible;
  }

  &::after {
    content: "";
    width: 381.4px;
    height: 520px;
    background-image: url("../images/bg-main-mobile.png");
    background-size: cover;
    background-position: 20% 60%;
    position: absolute;
    right: -110px;
    top: -144px;
    z-index: -1;
    @media only screen and (min-width: 750px) {
      background-image: url("../images/bg-main-tablet.png");
      background-repeat: none;
      background-position: 80% 60%;
      right: -30px;
      top: -144px;
      width: 983px;
      height: 908px;
    }
    @media only screen and (min-width: 1000px) {
      width: 1813px;
      right: -280px;
      top: -144px;
      background-position: 135% 60%;
      height: 1758px;
      background-image: url("../../images/bg-main-desktop.png");
    }
  }
}
a {
  cursor: pointer;
}
